{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\react\\\\windows-explorer-app\\\\src\\\\components\\\\SubFolder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubFolder = ({\n  folder\n}) => {\n  _s();\n  const [subFolders, setSubFolders] = useState([]);\n  useEffect(() => {\n    if (folder) {\n      fetch(`http://127.0.0.1:8000/api/${folder.id}/sub_folder`).then(response => response.json()).then(data => {\n        if (data.status === 'success') {\n          setSubFolders(data.data.sub_folders || []);\n        } else {\n          console.error('Error fetching subfolder data:', data.message);\n        }\n      }).catch(error => console.error('Error fetching subfolder data:', error));\n    }\n  }, [folder]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sub Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), folder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: subFolders.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Modified Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: subFolders.map(subfolder => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subfolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subfolder.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subfolder.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(subfolder.updated_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)]\n          }, subfolder.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No subfolders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SubFolder, \"P1dhnOb0FMSQXjjEpH9u8PiiEQk=\");\n_c = SubFolder;\nexport default SubFolder;\nvar _c;\n$RefreshReg$(_c, \"SubFolder\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SubFolder","folder","_s","subFolders","setSubFolders","fetch","id","then","response","json","data","status","sub_folders","console","error","message","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","subfolder","name","type","size","Date","updated_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/project/react/windows-explorer-app/src/components/SubFolder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SubFolder = ({ folder }) => {\r\n  const [subFolders, setSubFolders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (folder) {\r\n      fetch(`http://127.0.0.1:8000/api/${folder.id}/sub_folder`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.status === 'success') {\r\n            setSubFolders(data.data.sub_folders || []);\r\n          } else {\r\n            console.error('Error fetching subfolder data:', data.message);\r\n          }\r\n        })\r\n        .catch(error => console.error('Error fetching subfolder data:', error));\r\n    }\r\n  }, [folder]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sub Folder</h2>\r\n      {folder ? (\r\n        <div>\r\n          {subFolders.length > 0 ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Type</th>\r\n                  <th>Size</th>\r\n                  <th>Modified Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {subFolders.map(subfolder => (\r\n                  <tr key={subfolder.id}>\r\n                    <td>{subfolder.name}</td>\r\n                    <td>{subfolder.type}</td>\r\n                    <td>{subfolder.size}</td>\r\n                    <td>{new Date(subfolder.updated_at).toLocaleDateString()}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No subfolders</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubFolder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}