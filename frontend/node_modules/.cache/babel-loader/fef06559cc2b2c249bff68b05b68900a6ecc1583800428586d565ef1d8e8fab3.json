{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\react\\\\windows-explorer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FolderList from './components/FolderList';\nimport FolderDetails from './components/FolderDetails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/folder').then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        setFolders(data.data);\n      } else {\n        setError(data.message);\n      }\n    }).catch(error => setError('Error fetching data: ' + error)).finally(() => setLoading(false));\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(FolderList, {\n        folders: folders,\n        onSelect: setSelectedFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(FolderDetails, {\n        folder: selectedFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"d46y/9uFr3R9/cWa3wR4R7RRL00=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FolderList","FolderDetails","jsxDEV","_jsxDEV","App","_s","folders","setFolders","selectedFolder","setSelectedFolder","loading","setLoading","error","setError","fetch","then","response","json","data","status","message","catch","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSelect","folder","_c","$RefreshReg$"],"sources":["C:/project/react/windows-explorer-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FolderList from './components/FolderList';\nimport FolderDetails from './components/FolderDetails';\nimport './App.css';\n\nconst App = () => {\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/folder')\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 'success') {\n          setFolders(data.data);\n        } else {\n          setError(data.message);\n        }\n      })\n      .catch(error => setError('Error fetching data: ' + error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"app\">\n      <div className=\"left-panel\">\n        <FolderList folders={folders} onSelect={setSelectedFolder} />\n      </div>\n      <div className=\"right-panel\">\n        <FolderDetails folder={selectedFolder} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QAC7BZ,UAAU,CAACW,IAAI,CAACA,IAAI,CAAC;MACvB,CAAC,MAAM;QACLL,QAAQ,CAACK,IAAI,CAACE,OAAO,CAAC;MACxB;IACF,CAAC,CAAC,CACDC,KAAK,CAACT,KAAK,IAAIC,QAAQ,CAAC,uBAAuB,GAAGD,KAAK,CAAC,CAAC,CACzDU,OAAO,CAAC,MAAMX,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOP,OAAA;IAAAoB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIf,KAAK,EAAE,oBAAOT,OAAA;IAAAoB,QAAA,GAAK,SAAO,EAACX,KAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACExB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBpB,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAL,QAAA,eACzBpB,OAAA,CAACH,UAAU;QAACM,OAAO,EAAEA,OAAQ;QAACuB,QAAQ,EAAEpB;MAAkB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACNxB,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAL,QAAA,eAC1BpB,OAAA,CAACF,aAAa;QAAC6B,MAAM,EAAEtB;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}